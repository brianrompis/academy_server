package main

import (
	"fmt"

	"gorm.io/driver/postgres"
	"gorm.io/gorm"
)

type Tabler interface {
	TableName() string
}

func InitialMigration() {
	// dsn := "brian:1q2w3e4r!Q@W#E$R@tcp(127.0.0.1:3306)/classroom?charset=utf8mb4&parseTime=True&loc=Local"
	dsn := "host=127.0.0.1 user=brian password=!Q@W#E$R1q2w3e4r dbname=classroom port=5432 sslmode=disable TimeZone=Asia/Shanghai"
	db, err = gorm.Open(postgres.Open(dsn), &gorm.Config{})
	if err != nil {
		fmt.Println(err.Error())
		panic("Faild to connect to database")
	}

	db.AutoMigrate(&DocumentTemplate{})
	db.AutoMigrate(&Classroom{})
	// db.Migrator().CreateConstraint(&ClassroomPeriod{}, "Classroom")
	// db.Migrator().CreateConstraint(&ClassroomPeriod{}, "fk_classroom_period_classroom")
	db.AutoMigrate(&QualificationClassroom{})
	// db.Migrator().CreateConstraint(&Classroom{}, "QualificationClassroom")
	// db.Migrator().CreateConstraint(&Classroom{}, "fk_classroom_qualification_classroom")
	db.AutoMigrate(&Qualification{})
	// db.Migrator().CreateConstraint(&DocumentTemplate{}, "Qualification")
	// db.Migrator().CreateConstraint(&DocumentTemplate{}, "fk_document_template_qualification")
	// db.Migrator().CreateConstraint(&Qualification{}, "QualificationClassroom")
	// db.Migrator().CreateConstraint(&Qualification{}, "fk_qualification_qualification_classroom")
	db.AutoMigrate(&User{})
	// db.Migrator().CreateConstraint(&User{}, "TeacherClassroom")
	// db.Migrator().CreateConstraint(&User{}, "fk_user_teacher_classroom")
	// db.Migrator().CreateConstraint(&User{}, "Classroom")
	// db.Migrator().CreateConstraint(&User{}, "fk_user_classroom")
	// db.Migrator().CreateConstraint(&User{}, "StudentClassroom")
	// db.Migrator().CreateConstraint(&User{}, "fk_user_student_classroom")
	// db.Migrator().CreateConstraint(&User{}, "VoteNew")
	// db.Migrator().CreateConstraint(&User{}, "fk_user_vote_new")
	// db.Migrator().CreateConstraint(&User{}, "VoteExisting")
	// db.Migrator().CreateConstraint(&User{}, "fk_user_vote_existing")
	db.AutoMigrate(&JobQualification{})
	// db.Migrator().CreateConstraint(&Qualification{}, "JobQualification")
	// db.Migrator().CreateConstraint(&Qualification{}, "fk_qualification_job_qualification")
	db.AutoMigrate(&Job{})
	// db.Migrator().CreateConstraint(&Job{}, "JobQualification")
	// db.Migrator().CreateConstraint(&Job{}, "fk_job_job_qualification")
	// db.Migrator().CreateConstraint(&Job{}, "JobVacancy")
	// db.Migrator().CreateConstraint(&Job{}, "fk_job_job_vacancy")
	db.AutoMigrate(&JobVacancy{})
	// db.Migrator().CreateConstraint(&Job{}, "JobVacancy")
	// db.Migrator().CreateConstraint(&Job{}, "fk_job_job_vacancy")
	db.AutoMigrate(&UserApplication{})
	// db.Migrator().CreateConstraint(&User{}, "UserApplication")
	// db.Migrator().CreateConstraint(&User{}, "fk_user_user_application")
	db.AutoMigrate(&EmploymentHistory{})
	// db.Migrator().CreateConstraint(&User{}, "EmploymentHistory")
	// db.Migrator().CreateConstraint(&User{}, "fk_user_employment_history")
	db.AutoMigrate(&EducationHistory{})
	// db.Migrator().CreateConstraint(&User{}, "EducationHistory")
	// db.Migrator().CreateConstraint(&User{}, "fk_user_education_history")
	db.AutoMigrate(&Skill{})
	// db.Migrator().CreateConstraint(&User{}, "Skill")
	// db.Migrator().CreateConstraint(&User{}, "fk_user_skill")
	db.AutoMigrate(&Topic{})
	db.AutoMigrate(&Department{})
	// db.Migrator().CreateConstraint(&Department{}, "Classroom")
	// db.Migrator().CreateConstraint(&Department{}, "fk_department_classroom")
	db.AutoMigrate(&ClassroomPeriod{})
	// db.Migrator().CreateConstraint(&Classroom{}, "ClassroomPeriod")
	// db.Migrator().CreateConstraint(&Classroom{}, "fk_classroom_classroom_period")
	db.AutoMigrate(&RegistrationPeriod{})
	// db.Migrator().CreateConstraint(&ClassroomPeriod{}, "RegistrationPeriod")
	// db.Migrator().CreateConstraint(&ClassroomPeriod{}, "fk_classroom_period_registration_period")
	db.AutoMigrate(&Assignment{})
	// db.Migrator().CreateConstraint(&Classroom{}, "Assignment")
	// db.Migrator().CreateConstraint(&Classroom{}, "fk_classroom_assignment")
	db.AutoMigrate(&StudentSubmission{})
	// db.Migrator().CreateConstraint(&Assignment{}, "StudentSubmission")
	// db.Migrator().CreateConstraint(&Assignment{}, "fk_assignment__student_submission")
	db.AutoMigrate(&StudentClassroom{})
	// db.Migrator().CreateConstraint(&StudentClassroom{}, "StudentSubmission")
	// db.Migrator().CreateConstraint(&StudentClassroom{}, "fk_student_classroom__student_submission")
	// db.Migrator().CreateConstraint(&ClassroomPeriod{}, "StudentClassroom")
	// db.Migrator().CreateConstraint(&ClassroomPeriod{}, "fk_classroom_period_student_classroom")
	db.AutoMigrate(&TeacherClassroom{})
	// db.Migrator().CreateConstraint(&Classroom{}, "TeacherClassroom")
	// db.Migrator().CreateConstraint(&Classroom{}, "fk_classroom_teacher_classroom")
	db.AutoMigrate(&SuggestedClassroom{})
	db.AutoMigrate(&VoteNew{})
	// db.Migrator().CreateConstraint(&SuggestedClassroom{}, "VoteNew")
	// db.Migrator().CreateConstraint(&SuggestedClassroom{}, "fk_suggested_classroom_vote_new")
	db.AutoMigrate(&VoteExisting{})
	// db.Migrator().CreateConstraint(&Classroom{}, "VoteExisting")
	// db.Migrator().CreateConstraint(&Classroom{}, "fk_classroom_vote_existing")
	db.AutoMigrate(&GradeAssignHistory{})
	// db.Migrator().CreateConstraint(&StudentSubmission{}, "GradeAssignHistory")
	// db.Migrator().CreateConstraint(&StudentSubmission{}, "fk_student_submission_grade_assign_history")
	// db.Migrator().CreateConstraint(&TeacherClassroom{}, "GradeAssignHistory")
	// db.Migrator().CreateConstraint(&TeacherClassroom{}, "fk_teacher_classroom_grade_assign_history")
	db.AutoMigrate(&OpenCandidate{})
	// db.Migrator().CreateConstraint(&User{}, "OpenCandidate")
	// db.Migrator().CreateConstraint(&User{}, "fk_user_open_candidate")
	// db.Migrator().CreateConstraint(&Job{}, "OpenCandidate")
	// db.Migrator().CreateConstraint(&Job{}, "fk_job_open_candidate")
	db.AutoMigrate(&OpenLocation{})
	// db.Migrator().CreateConstraint(&OpenCandidate{}, "OpenLocation")
	// db.Migrator().CreateConstraint(&OpenCandidate{}, "fk_open_candidate_open_location")
}
